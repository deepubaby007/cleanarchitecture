<#@ template language="C#" hostspecific="true" #>
<# string paramNameSpace = this.Host.ResolveParameterValue("", "", "nameSpace");#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using MediatR;
using <# this.Write(paramNameSpace.Split('.')[0]); this.Write(".Application;"); this.Write("\n"); #>
using <# this.Write(paramNameSpace.Split('.')[0]); this.Write(".Domain;"); this.Write("\n"); #>

namespace <# this.Write(paramNameSpace); this.Write("\n"); #>
{
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public class ExampleV1Controller : ControllerBase
    {
        private readonly IMediator _mediator;

        public ExampleV1Controller(IMediator mediator)
        {
            _mediator = mediator;
        }

        [HttpGet]
        public async Task<string> ExampleGet()
        {
            ExampleRequestQuery request = new ExampleRequestQuery();

            var result = await _mediator.Send(request);

            return result.ResponseData;
        }

        [HttpPut]
        public string ExamplePut()
        {
            return "From test controller V1 examplePut method";
        }

        [HttpPost]
        public string ExamplePost()
        {
            return "From test controller V1 examplePost method";
        }

        [HttpDelete]
        public string ExampleDelete()
        {
            return "From test controller V1 exampleDelete method";
        }
    }
}